const { MessageEmbed } = require("discord.js");
const { errorMessage } = require('../../functions.js');
const cooldown = new Set();

module.exports = {
    name: "name",
    aliases: ['aliases'],
    category: "category",
    description: "Description",
    usage: 'Usage',
    timeout: "5 seconds",
    run: async (client, message, args) => {
      if (message.deletable) {
        message.delete();
      }
      if (cooldown.has(message.author.id)) {
        message.reply(`that's a little too fast!`).then(m => m.delete({ timeout: 2500 }));
      } else {

      // Code

      cooldown.add(message.author.id);
      setTimeout(() => {
        cooldown.delete(message.author.id);
      }, 5000);
    }
  }
}

// JS

// BREAK

const { MessageEmbed } = require("discord.js");
const { errorMessage } = require('../../functions.js');
const cooldown = new Set();
const auth = new Set();

module.exports = {
    name: "name",
    aliases: ['aliases'],
    category: "category",
    description: "Description",
    usage: 'Usage',
    timeout: "5 seconds",
    run: async (client, message, args) => {
      if (message.deletable) {
        message.delete();
      }
      if (cooldown.has(message.author.id)) {
        message.reply(`that's a little too fast!`).then(m => m.delete({ timeout: 2500 }));
      } else {
      auth.add('669051415074832397');

      if(message.member.hasPermission("PERMISSION")) {
        auth.add(message.author.id)
      }
      if(!auth.has(message.author.id)) {
        return message.reply('kitsune leadership has not authorized you to do that!').then(m => m.delete({timeout: 5000}))
      }
      if(!message.guild.me.hasPermission("PERMISSION")) {
        return message.reply('I have not been allowed to PERMISSION. Please check my role has permissions to do so')
      }

      // Code

      auth.delete(message.author.id)
      cooldown.add(message.author.id);
      setTimeout(() => {
        cooldown.delete(message.author.id);
      }, 5000);
    }
  }
}

// JS
